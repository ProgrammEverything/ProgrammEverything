name: Update README Projects

on:
  schedule:
    - cron: "0 0 * * *"  # runs daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      - name: Generate projects markdown
        id: generate
        run: |
          echo "Fetching repos for PROGRAMMEVERYTHING..."
          repos_json=$(curl -s "https://api.github.com/users/PROGRAMMEVERYTHING/repos?per_page=100")
          
          # Debug: output the JSON response
          echo "$repos_json" | jq .
          
          # Ensure the response is an array; exit if not.
          if ! echo "$repos_json" | jq 'if type=="array" then empty else "error" end' > /dev/null; then
            echo "Error: Expected an array of repositories."
            exit 1
          fi
          
          # Generate the markdown list from each repository
          projects=$(echo "$repos_json" | jq -r '.[] | "- [" + .name + "](" + .html_url + ")"')
          
          # Set the projects output (using the new GITHUB_OUTPUT method)
          {
            echo "projects<<EOF"
            echo "$projects"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Update README file
        run: |
          # Retrieve the projects list generated in the previous step
          new_projects="${{ steps.generate.outputs.projects }}"
          echo "New projects markdown:"
          echo "$new_projects"
          
          # Escape any characters that might confuse Perl
          escaped=$(printf '%s\n' "$new_projects" | sed 's/[\/&]/\\&/g')
          
          # Use Perl to replace the section between the markers in README.md.
          # This uses {} as delimiters for the substitution.
          perl -0777 -pi -e "s{<!-- START PROJECTS -->.*<!-- END PROJECTS -->}{<!-- START PROJECTS -->\n$escaped\n<!-- END PROJECTS -->}s" README.md
          
          echo "Updated README.md content:"
          cat README.md

      - name: Commit changes if any
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update projects list in README"
            git push
          fi
